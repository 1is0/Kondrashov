//---------------------------------------------------------------------------


#pragma hdrstop

#include "Unit2.h"

void List :: Add(int a)
{
	Node *temp =  new Node();
	temp->next = NULL;
	temp->prev = tail;
	if(tail)
	{
		tail->next = temp;
	}
	tail = temp;
	if(!head)
	{
		head = temp;
	}
	size++;
	current++;
}
/*int List :: GetNum(int index)
{
	int counter = 0;
	Node *temp = head;
	while(temp)
	{
		if(counter == index)
		{
		 return temp->number;
		}
		temp = temp->next;
		counter++;
	}
}*/
int List :: GetMax()
{
	Node* ptr=head;
	int Max=-1000000;
	while(ptr!=NULL)
	{
		if(ptr->numbers>Max)
		{
			Max=ptr->numbers;
		}
		ptr=ptr->next;
	}
	return Max;
}
int List :: GetMin()
{
	//return min.numbers;
}
void List :: DeleteQueue()
{
	while(head)
	{
		Node *temp = head->next;
		delete temp;
		head = temp;
	}
}


//---------------------------------------------------------------------------

#pragma package(smart_init)
