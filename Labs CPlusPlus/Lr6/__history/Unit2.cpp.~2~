//---------------------------------------------------------------------------


#pragma hdrstop

#include "Unit2.h"


Node* Tree :: TreeCreate(std::string name,int data)
{
	Node* item = new Node;
	if(!item)
	{
		//ShowMessage(L"Не хватает памяти!");
		//break;
	}
	item->left = NULL;
	item->right = NULL;
	item->cvc = data;
	item->bank = name;

	return item;
}

Node* Tree :: TreeAdd(Node* tree,std::string bank,int cvc)
{
	if (!tree)
	{
		return TreeCreate(bank,cvc);
	}

	Node* root = tree;
	while (1)
	{
		if (root->cvc == cvc && root->bank == bank)
		{
			return tree;
		}

		if (cvc < root->cvc && bank < root->bank)
		{
			if (root->left)
			{
				root = root->left;
			}
			else
			{
				root->left = TreeCreate(bank,cvc);
				return tree;
			}
		}
		else
		{
			if (root->right)
			{
				root = root->right;
			}
			else
			{
				root->right = TreeCreate(bank,cvc);
				return tree;
			}
		}
	}
}

/*void Tree :: PrintTree(Node* temp, TTreeView *TreeView, int &index)
{
	int i = index;
	if(temp->left)
	{
		TreeView1->Items->AddChild(TreeView1->Items->Item[i], temp->left->bank);
		PrintTree(temp->left, TreeView, ++index);
	}
	if(temp->pRight)
	{
		TreeView1->Items->AddChild(TreeView1->Items->Item[i], temp->right->bank);
		PrintTree(temp->right, TreeView, ++index);
	}
}*/
//---------------------------------------------------------------------------

#pragma package(smart_init)
